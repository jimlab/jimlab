<?xml version="1.0" encoding="UTF-8"?>
<!--
 * This file is part of the Jimlab module made for Scilab
 * Copyright (C) 2017 - ENSIM, Université du Maine - Camille CHAILLOUS
 * 
 * This file must be used under the terms of the CeCILL.
 * This source file is licensed as described in the file COPYING, which
 * you should have received as part of this distribution.  The terms
 * are also available at    
 * http://www.cecill.info/licences/Licence_CeCILL_V2.1-fr.txt
 *
 -->
<refentry xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" 
		xmlns:svg="http://www.w3.org/2000/svg" xmlns:mml="http://www.w3.org/1998/Math/MathML" 
		xmlns:db="http://docbook.org/ns/docbook" xmlns:scilab="http://www.scilab.org"  
		xml:lang="fr" xml:id="jimhistEqual">
    <refnamediv>
        <refname>jimhistEqual</refname>
        <refpurpose>Amélioration d'une image par égalisation d'histogramme</refpurpose>
    </refnamediv>
    <refsynopsisdiv>
        <title>Syntaxes</title>
        <synopsis>
            equalizedImage = jimhistEqual(image)
			equalizedImage = jimhistEqual(image, colormap)
			equalizedImage = jimhistEqual(image, argb)
			equalizedImage = jimhistEqual(image, Type)
        </synopsis>
    </refsynopsisdiv>
    <refsection>
        <title>Arguments</title>
        <variablelist>
            <varlistentry>
                <term>image</term>
                <listitem>
                    <para>
						Cet argument d'entrée peut prendre les formes suivantes :
							<itemizedlist>
								<listitem>
									<para>
									un objet <literal>jimage</literal>
									</para>
								</listitem>
								<listitem>
									<para>
									une matrice d'entiers 8 bits non signés correspondant au niveau de gris de chaque pixel
									</para>
								</listitem>
								<listitem>
									<para>
									une matrice ou une hypermatrice de doubles normalisés entre 0 et 1 ou non
									</para>
								</listitem>
								<listitem>
									<para>
									une matrice d'entiers sur 32 bits (signés ou non signés) qui donne les couleurs d'un pixels en RGBA ou en ARGB
									<warning>Il est conseillé de renseigner l'argument <literal>argb</literal></warning>
									</para>
								</listitem>
								<listitem>
									<para>
									une matrice de numéros de couleurs telles que répertoriées dans la table de couleur définie par l'argument <literal>colormap</literal> alors obligatoire. 
									</para>
								</listitem>
								<listitem>
									<para>
									une hypermatrice RGB, RGBA ou ARGB d'entiers sur 8 bits (signés ou non signés)
									</para>
								</listitem>
								<listitem>
									<para>
									une matrice d'entiers sur 16 bits (signés ou non signés) qui donne les couleurs des pixels en RGB ou RGBA.
									<warning>Il est conseillé de renseigner l'argument <literal>Type</literal></warning>
									</para>
								</listitem>
								<listitem>
									<para>
									une matrice booléenne. 
									</para>
								</listitem>
						</itemizedlist>
					</para>					
                </listitem>
			</varlistentry>
			<varlistentry>
				<term>colormap</term> 
                <listitem>
                    <para>
						Une matrice de dimensions M x 3. M est le nombre de couleurs de la colormap. Pour chaque ligne, les trois coefficients définissent l'intesité du rouge, du vert et du bleu normalisée entre 0 et 1. 
					</para>
                </listitem>
			</varlistentry>
			<varlistentry>
				<term>argb</term> 
                <listitem>
                    <para>
						Un booléen : <literal>%t</literal> si l'image est encodée en ARGB, <literal>%f</literal> si l'image est encodée en RGBA. Par défaut, la valeur de cet argument est <literal>%f</literal>.
					</para>
                </listitem>
			</varlistentry>
			<varlistentry>
				<term>Type</term> 
                <listitem>
                    <para>
						Une chaîne de caractère donnant le type d'encodage pour une matrice en entrée codée en uint16 : 
						<itemizedlist>
								<listitem>
									<para>
									'444' indique que chaque couleur est codée sur 4 bits
									</para>
								</listitem>
								<listitem>
									<para>
									'555' indique que chaque couleur est codée sur 5 bits
									</para>
								</listitem>
								<listitem>
									<para>
									'4444' indique que chaque couleur ainsi que la transparence est codée sur 4 bits
									</para>
								</listitem>
								<listitem>
									<para>
									'5551' indique que chaque couleur est codé sur 5 bits et la transparence sur 1 bit. 
									</para>
								</listitem>
						</itemizedlist>
					</para>
                </listitem>
			</varlistentry>
			<varlistentry>
				<term>equalizedImage</term> 
                <listitem>
                    <para>
						Un objet de type jimage dont le champ <literal>.image</literal> est encodé en niveaux de gris ou une matrice encodée en niveaux de gris sur des entiés 8 bits non signés.
					</para>
                </listitem>
			</varlistentry>
        </variablelist>
    </refsection>
    <refsection>
        <title>Description</title>
        <para>
            Cette fonction permet d'ajuster automatiquement le contraste d'une image par la méthode d'égalisation d'histogramme. 
		</para>
		<para>
			Si un objet <code>jimage</code> est donné en entrée, les champs <code>.title</code> et <code>.format</code> sont conservés pour l'objet en sortie. Dans le cas où le champ <literal>.transparencyColor</literal> est différent de -1, elle n'est pas prise en compte dans l'algorithme d'égalisation d'histogramme.
        </para>
		<para>
			Si l'image d'entrée est encodée en couleurs sur 3 ou 4 couches, elle sera convertie en niveaux de gris.
        </para>
    </refsection>
    <refsection>
        <title>Exemples</title>
        <programlisting role="example"><![CDATA[ 
//Objet de type jimage
path = jimlabPath("/") + 'tests/images/noError/rgb.bmp';
jimage = jimread(path);
equalizedJimage = jimhistEqual(jimage);
subplot(2,2,1)
jimdisp(jimage)
subplot(2,2,2)
jimdisp(equalizedJimage)

//Matrice en niveaux de gris
path = jimlabPath("/") + 'tests/images/noError/gray.jpg';
jimage = jimread(path);
image = jimage.image;
equalizedImage = jimhistEqual(image);
subplot(2,2,3)
jimdisp(image)
subplot(2,2,4)
jimdisp(equalizedImage)
 ]]></programlisting>
	</refsection>
    <refsection role="see also">
        <title>Voir Aussi</title>
        <simplelist type="inline">
			<member>
                <link linkend="jimage_properties">jimage</link>
            </member>
        </simplelist>
    </refsection>
    <refsection>
        <title>Historique</title>
        <revhistory>
            <revision>
                <revnumber>0.1 - 2017-05</revnumber>
                <revremark>Publication initiale du module Jimlab</revremark>
            </revision>
        </revhistory>
    </refsection>
</refentry>
