<?xml version="1.0" encoding="UTF-8"?>
<!--
 * This file is part of the Jimlab module made for Scilab
 * Copyright (C) 2017 - ENSIM, Université du Maine - Alix Melaine Mnoubue
 *
 * This file must be used under the terms of the CeCILL.
 * This source file is licensed as described in the file COPYING, which
 * you should have received as part of this distribution.  The terms
 * are also available at
 * http://www.cecill.info/licences/Licence_CeCILL_V2.1-fr.txt
-->
<refentry xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink"
		xmlns:svg="http://www.w3.org/2000/svg" xmlns:mml="http://www.w3.org/1998/Math/MathML"
		xmlns:db="http://docbook.org/ns/docbook" xmlns:scilab="http://www.scilab.org"
		xml:lang="fr" xml:id="jimpixelised">
    <refnamediv>
        <refname>jimpixelised</refname>
        <refpurpose>pixelisation d'une image</refpurpose>
    </refnamediv>
    <refsynopsisdiv>
        <title>Syntaxes</title>
        <synopsis>
			impixeled= jimpixelised(Image,boxSize)
        </synopsis>
    </refsynopsisdiv>
    <refsection>
        <title>Arguments</title>
        <variablelist>
		
            <varlistentry>
                <term>Image</term>

                    <para>
			Un objet de type jimage, une matrice de niveaux de gris ou en couleur RVB.
					</para>
				</varlistentry>
				<varlistentry>
				<term>boxSize</term>
				 <para>
			soit un scalaire correspondant à la taille du carré(nombre de pixels) avec laquelle Image serait divisé.La valeur par défaut est 10; Soit un  vecteur à 2 composantes [picHeigth,picWidth](picHeigth,picWidth deux nombres entiers positifs correspondant respectivement  à la longueur ,largeur du rectangle.)
				</para>
				</varlistentry>
			<varlistentry>
				<term>impixeled</term>
                <listitem>
                    <para>
			Un objet de type jimage ou une matrice de niveaux de gris et de même taille que <code>Image</code>.
					</para>
                </listitem>
			</varlistentry>
        </variablelist>
    </refsection>
    <refsection>
        <title>Description</title>
        <para>
            Cette fonction permet de flouter une image.la zone  pixelisée fait apparaitre des blocs de n*m pixels de couleurs uniformes.
	</para>
		<para>
			 Si un objet <code>jimage</code> est donné en entrée, seul le champ <code> .image </code> est modifié.
               </para>
    </refsection>
    <refsection>
        <title>Exemples</title>
        <programlisting role="example"><![CDATA[
		//Objet de type jimage(gray image)
		path=jimlabPath("/") + 'tests/images/noError/';
		jimage1 = jimread(path + 'gray.jpg');
		impixeled1 = jimsmooth(jimage1,10);
		subplot(2,2,1),jimdisp(jimage1)
		subplot(2,2,2),jimdisp(impixeled1)

		//Objet de type jimage(RGB image)

		jimage2 = jimread(jimlabPath("/") + 'tests/images/noError/RGB.jpg');
		impixeled2 = jimsmooth(jimage2,5,2);
		subplot(2,2,3),jimdisp(jimage2)
		subplot(2,2,4),jimdisp(impixeled2)
 ]]></programlisting>
  <scilab:image>
 	//Objet de type jimage(gray image)
		path=jimlabPath("/") + 'tests/images/noError/';
		jimage1 = jimread(path + 'gray.jpg');
		impixeled1 = jimsmooth(jimage1,10);
		subplot(2,2,1),jimdisp(jimage1)
		subplot(2,2,2),jimdisp(impixeled1)

		//Objet de type jimage(RGB image)

		jimage2 = jimread(jimlabPath("/") + 'tests/images/noError/RGB.jpg');
		impixeled2 = jimsmooth(jimage2,5,2);
		subplot(2,2,3),jimdisp(jimage2)
		subplot(2,2,4),jimdisp(impixeled2)
		subplot(2,2,4),jimdisp(blured2)

   </scilab:image>
	</refsection>
    <refsection role="see also">
        <title>Voir Aussi</title>
        <simplelist type="inline">
			<member>
                <link linkend="jimage_properties">jimage</link>
            </member>
        </simplelist>
    </refsection>
    <refsection>
        <title>Historique</title>
        <revhistory>
            <revision>
                <revnumber>2017-05</revnumber>
                <revremark>Publication initiale du module Jimlab</revremark>
            </revision>
        </revhistory>
    </refsection>
</refentry>
