<?xml version="1.0" encoding="UTF-8"?>
<!--
 * This file is part of the Jimlab module made for Scilab
 * Copyright (C) 2017 - ENSIM, Université du Maine - Nicolas AEGERTER
 * 
 * This file must be used under the terms of the CeCILL.
 * This source file is licensed as described in the file COPYING, which
 * you should have received as part of this distribution.  The terms
 * are also available at    
 * http://www.cecill.info/licences/Licence_CeCILL_V2.1-fr.txt
 *
 -->
<refentry xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" 
		xmlns:svg="http://www.w3.org/2000/svg" xmlns:mml="http://www.w3.org/1998/Math/MathML" 
		xmlns:db="http://docbook.org/ns/docbook" xmlns:scilab="http://www.scilab.org"  
		xml:lang="en" xml:id="jimwrite">
    <refnamediv>
        <refname>jimwrite</refname>
        <refpurpose>Write an image as file in a directory. from a <literal>jimage</literal> object or a matrix</refpurpose>
    </refnamediv>
    <refsynopsisdiv>
        <title>Syntax</title>
        <synopsis>
            S = jimwrite(image,imagePath)
            S = jimwrite(image,imagePath,Encoding)
            S = jimwrite(image,imagePath,Encoding,typeMIME)
        </synopsis>
    </refsynopsisdiv>
    <refsection>
        <title>Arguments</title>
        <variablelist>
            <varlistentry>
		<term>image</term>
		<listitem>
			<para>
				This argument can be either a <literal>jimage</literal> object containning image's matrix and meta data, or a hypermatrix of one, three or four layers representing a gray-scale, RGB or RGBA image. Image must be a int8,16,32 or uint8,16,32 matrix, a boolean matrix or a real matrix.
			</para>
		</listitem>
                </varlistentry>
                <varlistentry>
                <term>imagePath</term>
                <listitem>
                    <para>
                    A string containning the path of the file. This can be an absolute or relative path.
                        imagePath can also be a directory's path.
                    In that case and for a <literal>jimage</literal> object, the file will be named after the .title field of the <literal>jimage</literal>. Without encoding and typeMIME arguments, these data will also be get from the <literal>jimage</literal>.
                            For a matrix, default file name is "No_name" . Without encoding and typeMIME arguments, encoding will be set after the number of layers, and typeMIME will be ".jpg"..
                    </para>
                </listitem>
            </varlistentry>
	<varlistentry>
		<term>Encoding</term>
                <listitem>
                    <para>
                       A string giving the encoding type : 'gray', 'rgb', or 'rgba'. Without encoding argument, the .encoding field of the <literal>jimage</literal> object, or 'rgb' for an hypermatrix will be used.
		 <varlistentry>
                <term>typeMIME</term>
                <listitem>
                    <para>
                        A string givinning the MIME type. typeMIME can only be 'jpg', 'png', 'gif' and 'bmp' sont disponibles. Si le format n'est pas précisé, ou si il est incompatible, le type MIME présent dans la mliste jimage
                        sera utilisée. Si la déclaration est faite avec une matrice, l'image sera enregistrée au format JPEG (jpg).
                    </para>
                </listitem>
            </varlistentry>
        <varlistentry>
                <term>S</term>
                <listitem>
                    <para>
                        Un booléen. Vaut vrai si l'image à été enregistré, faux sinon.
                    </para>
                </listitem>
            </varlistentry>
            </varlistentry>
            
            
            
        </variablelist>
    </refsection>
    <refsection>
        <title>Description</title>
        	<para>
            		This function save an image as a file from a mlist jimage. It can save RGB, RGBA or gray scales images.
		</para>
		<para>
			The mlist image contain : the image matrix data, the encoding, the format and the name, of the image.
			The gray encoding is for 2D matrix data of gray scale images.
			The rgb encoding is for 3D matrix data of RGB images.
			The rgba encoding is for 4D matrix data of RGBA images. The last dimension stand for transparency.
			This list is created by the function jimread
        </para>
    </refsection>
    <refsection>
        <title>Exemples</title>
        <programlisting role="example"><![CDATA[ 
			global jimlabPath
			path = jimlabPath + '/help/images/logoEnsim.png';
			jimage_original = jimread(path);// Charging of the original image file
			path = jimlabPath + '/help/images'; // New path definition
			jimdisp(jimage_original,,'info');// Display of the original image
			
			jimwrite(jimage_original,path,'gif','logoEnsim_Copie'); // Save the copy under GIF format
			jimwrite(jimage_original,path,,'logoEnsim_Copie'); // Saving the copy under original format			
			// Display the copied images
			path1 = jimlabPath + '/help/images/logoEnsim_Copie.gif'; 
			path2 = jimlabPath + '/help/images/logoEnsim_Copie.png';
			jimdisp(path1,,'info');
			jimdisp(path2,,'info');
 ]]></programlisting>
	</refsection>
    <refsection role="see also">
        <title>See also</title>
        <simplelist type="inline">
            <member>
                <link linkend="jimdisp">jimdisp</link>
            </member>
            <member>
                <link linkend="jimread">jimread</link>
            </member>
        </simplelist>
    </refsection>
    <refsection>
        <title>History</title>
        <revhistory>
            <revision>
                <revnumber>2017-05</revnumber>
                <revremark>Initial publication of Jimlab module</revremark>
            </revision>
        </revhistory>
    </refsection>
</refentry>
