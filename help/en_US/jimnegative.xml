<?xml version="1.0" encoding="UTF-8"?>
<!--
 * This file is part of the Jimlab module made for Scilab
 * Copyright (C) 2017 - ENSIM, Université du Maine - Nicolas AEGERTER
 * Copyright (C) 2017 - ENSIM, Université du Maine - Samuel GOUGEON
 *
 * This file must be used under the terms of the CeCILL.
 * This source file is licensed as described in the file COPYING, which
 * you should have received as part of this distribution.  The terms
 * are also available at
 * http://www.cecill.info/licences/Licence_CeCILL_V2.1-fr.txt
 *
 -->
<refentry xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink"
        xmlns:svg="http://www.w3.org/2000/svg" xmlns:mml="http://www.w3.org/1998/Math/MathML"
        xmlns:db="http://docbook.org/ns/docbook" xmlns:scilab="http://www.scilab.org"
        xml:lang="en" xml:id="jimnegative">
    <refnamediv>
        <refname>jimnegative</refname>
        <refpurpose>Negative of an image</refpurpose>
    </refnamediv>
    <refsynopsisdiv>
        <title>Syntaxes</title>
        <synopsis>
           negative = jimnegative(image)
       </synopsis>
    </refsynopsisdiv>
    <refsection>
        <title>Arguments</title>
        <variablelist>
            <varlistentry>
                <term>image</term>
                <listitem>
                    <para>
                    <link linkend="jimage_properties">jimage object</link> (image array + its metadata),
                    or gray matrix or RGB or RGBA hypermatrix representing an image, as accepted by
                    <link linkend="jimstandard">jimstandard</link> without options.
                    </para>
                </listitem>
            </varlistentry>
            <varlistentry>
                <term>negative</term>
                <listitem>
                    <para>
                        Negative of the <varname>image</varname>, with the same sizes and number of
                        color layers.
                        <itemizedlist>
                            <listitem>
                                If <varname>image</varname> is a
                                <literal>jimage object</literal>, <varname>negative</varname> is so.
                                If <literal>image.transparencyColor</literal> is not set to -1, it
                                is inverted as well.
                            </listitem>
                            <listitem>
                                Otherwise: It is a matrix or hypermatrix of <literal>uint8</literal>
                                type, as returned by <literal>jimstandard()</literal>.
                            </listitem>
                        </itemizedlist>
                    </para>
                </listitem>
            </varlistentry>
        </variablelist>
    </refsection>
    <refsection>
        <title>Description</title>
        <para>
            This function inverts the colors or grey tones of an image.
        </para>
        <para>
            When the input image is not a <literal>jimage object</literal>, it is expected to be
            a matrix or hypermatrix representing an image and is passed to
            <literal>jimstandard()</literal> whose output is the actual considered image.
        </para>
        <para>
            For each pixel, for each color layer, the initial intensity <literal>Io</literal> being
            in [0, 255], the new intensity is set to <literal>In=255-Io</literal>
        </para>
        <para>
            When the input image has an alpha 4th layer, this one is never changed.
        </para>
        <note>
            The NOT operator <literal>~</literal> can be used to invert colors of any
            <literal>jimage object</literal> in a handy way.
        </note>
    </refsection>
    <refsection>
        <title>Examples</title>
        <programlisting role="example"><![CDATA[
            // From a jimage object
            //  Color:
            image = jimread(jimlabPath()+"/tests/images/lena_color.gif")
            subplot(2,3,1), jimdisp(image); xtitle("lena")
            subplot(2,3,2), jimdisp(jimnegative(image)); xtitle("jimnegative(lena)")
            subplot(2,3,3), jimdisp(~image); xtitle("~lena")
            // Gray:
            image = jimconvert(image,"gray");
            subplot(2,3,4), jimdisp(image); xtitle("lena_gray")
            subplot(2,3,5), jimdisp(jimnegative(image)); xtitle("jimnegative(lena_gray)")
            subplot(2,3,6), jimdisp(~image); xtitle("~lena_gray")
        ]]>
        </programlisting>
        <scilab:image>
            // From a jimage object
            //  Color:
            image = jimread(jimlabPath()+"/tests/images/lena_color.gif")
            subplot(2,3,1), jimdisp(image); xtitle("lena")
            subplot(2,3,2), jimdisp(jimnegative(image)); xtitle("jimnegative(lena)")
            subplot(2,3,3), jimdisp(~image); xtitle("~lena")
            // Gray:
            image = jimconvert(image,"gray");
            subplot(2,3,4), jimdisp(image); xtitle("lena_gray")
            subplot(2,3,5), jimdisp(jimnegative(image)); xtitle("jimnegative(lena_gray)")
            subplot(2,3,6), jimdisp(~image); xtitle("~lena_gray")
        </scilab:image>
        <programlisting role="example"><![CDATA[
            // From a matrix or hypermatrix:
            // Loading the image in "mat":
            load(jimlabPath()+"/tests/images/mat.data");
            // Color:
            typeof(mat(1)), size(mat)
            subplot(2,2,1), jimdisp(mat), xtitle("Color")
            nmat = jimnegative(mat);
            typeof(nmat(1)), size(nmat)
            subplot(2,2,2), jimdisp(nmat), xtitle("jimnegative(Color)")
            // Gray:
            mat = jimconvert(mat, "gray");
            typeof(mat), size(mat)
            subplot(2,2,3), jimdisp(mat), xtitle("Gray")
            nmat = jimnegative(mat);
            typeof(nmat(1)), size(nmat)
            subplot(2,2,4), jimdisp(nmat), xtitle("jimnegative(Gray)")
     ]]></programlisting>
    </refsection>
    <refsection role="see also">
        <title>See also</title>
        <simplelist type="inline">
        <member>
            <link linkend="jimage_properties">jimage properties</link>
        </member>
        <member>
            <link linkend="jimconvert">jimconvert</link>
        </member>
        <member>
            <link linkend="jimage_not">jimage NOT</link>
        </member>
    </simplelist>
    </refsection>
    <refsection>
        <title>History</title>
        <revhistory>
            <revision>
                <revnumber>0.1, 2017-06</revnumber>
                <revremark>jiminvert() is included in the first release of the Jimlab module</revremark>
            </revision>
            <revision>
                <revnumber>0.2, 2017-07</revnumber>
                <revremark>
                    <itemizedlist>
                        <listitem>
                            jiminvert() renamed jimnegative()
                        </listitem>
                        <listitem>
                            When it is enabled, Jimage.transparencyColor is now reverted as well.
                        </listitem>
                    </itemizedlist>
                </revremark>
            </revision>
        </revhistory>
    </refsection>
</refentry>
