<?xml version="1.0" encoding="UTF-8"?>
<!--
 * This file is part of the Jimlab module made for Scilab
 * Copyright (C) 2017 - ENSIM, Université du Maine - Camille CHAILLOUS
 * 
 * This file must be used under the terms of the CeCILL.
 * This source file is licensed as described in the file COPYING, which
 * you should have received as part of this distribution.  The terms
 * are also available at    
 * http://www.cecill.info/licences/Licence_CeCILL_V2.1-fr.txt
 *
 -->
<refentry xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" 
        xmlns:svg="http://www.w3.org/2000/svg" xmlns:mml="http://www.w3.org/1998/Math/MathML" 
        xmlns:db="http://docbook.org/ns/docbook" xmlns:scilab="http://www.scilab.org"  
        xml:lang="en" xml:id="jimstandard">
    <refnamediv>
        <refname>jimstandard</refname>
        <refpurpose>Standardisation of an image encoding for the module Jimlab</refpurpose>
    </refnamediv>
    <refsynopsisdiv>
        <title>Syntax</title>
        <synopsis>
            standardImage = jimstandard(image, colormap)
            standardImage = jimstandard(image, argb?)
            standardImage = jimstandard(image, colorsBits)
        </synopsis>
    </refsynopsisdiv>
    <refsection>
        <title>Arguments</title>
            <variablelist>
                <varlistentry>
		    <term>image</term>
                    <listitem>
		        <para>
			    <itemizedlist>
			        <listitem>
				    <para>
				        <emphasis role="bold">color image</emphasis>
					    <itemizedlist>
					        <listitem>
						    <para>
						        hypermatrix RGB or RGBA or ARGB (<literal>argb? = %t</literal>) of int8 or uint8, or of equivalent decimal numbers in [0, 255], in [-128, 127] or normalized in the intervalle [0, 1].
						    </para>
						</listitem>
						<listitem>
						    <para>
						        matrix
							    <itemizedlist>
							        <listitem>
								    <para>
								        of uint8 or int8 with binary segmentation "rgb332" (<literal>colorsBits = "332"</literal>), or of equivalent decimal numbers in [0, 2<superscript>16</superscript>-1] or in [-2<superscript>15</superscript>; 2<superscript>15</superscript>-1].
								    </para>
								</listitem>
								<listitem>
								    <para>
								        of uint16 or int16 with binary segmentation "rgba4444" (or set by <literal>colorsBits</literal>), or of equivalent decimal numbers in [0, 2<superscript>16</superscript>-1] or in [-2<superscript>15</superscript>; 2<superscript>15</superscript>-1].
								    </para>
								</listitem>
								<listitem>
								    <para>
								        of uint32 or int32 with binary segmentation "rgba8888" (or "argb8888" if <literal>argb? = %t</literal>), or of equivalent decimal numbers in [0, 2<superscript>32</superscript>-1] or in [-2<superscript>31</superscript>, 2<superscript>32</superscript>-1]
								    </para>
								</listitem>	
								<listitem>
								    <para>
								        of integer numbers (decimal numbers, int# ou uint#) of colors indexed in the <literal>colormap</literal>
								    </para>
								</listitem>
							    </itemizedlist>
							</para>
						    </listitem>
						</itemizedlist>
					    </para>
					</listitem>
					<listitem>
					    <para>
					         <emphasis role="bold">gray image</emphasis> : matrix of uint8 or int8, or of equivalent decimal numbers in [0, 255], in [-128, 127] or normalized in the intervalle [0, 1] or matrix of booleans (<literal>%t</literal> = White).
					    </para>
					</listitem>
				    </itemizedlist>
				</para>
			    </listitem>
			</varlistentry>
			<varlistentry>
			    <term>colormap</term>
			    <listitem>
				<para>
				    <itemizedlist>
					<listitem>
					    <para>
						M x 3 matrix of decimal numbers in [0, 1]. Line n°i = intensities <literal>[R V B]</literal> of color n°i.
					    </para>
					</listitem>
					<listitem>
					    <para>
						A figure handle, whose property <literal>.color_map</literal> is used.
					    </para>
					</listitem>
				    </itemizedlist>
				</para>
			    </listitem>
			</varlistentry>
			<varlistentry>
			    <term>argb?</term>
			    <listitem>
				<para>
				    A boolean : <literal>%t</literal> if the image is encoded in ARGB or argb####, <literal>%f</literal> otherwise. By default, it is <literal>%f</literal>.
				</para>
			    </listitem>
			</varlistentry>
			<varlistentry>
			    <term>colorsBits</term>
			    <listitem>
				<para>
				    A string indicating the binary segmentation RGB or RGBA of the colors for a matrix of
				    <itemizedlist>
					<listitem>
					    uint8 or int8 : "332"
					</listitem>
					<listitem>
					    uint16 or int16 : "4444", "5551", "555" (last bit ignored) or "444" (4 last bits ignored)
					</listitem>
				    </itemizedlist>
				</para>
			    </listitem>
			</varlistentry>
			<varlistentry>
			    <term>image</term>
			    <listitem>
			        <para>
				    <itemizedlist>
					<listitem>
					    a hypermatrix of uint8 encoded in RGBA (4 layers)
					</listitem>
					<listitem>
					    a hypermatrix of uint8 encoded in RGBA (3 layers)
					</listitem>
					<listitem>
					    a matrix of uint8 encoded in gray levels
					</listitem>
				    </itemizedlist>
				</para>
			    </listitem>
			</varlistentry>
		    </variablelist>
		</refsection>
		<refsection>
		    <title>Description</title>
		    <para>
			This function standardizes an image encoding so that the image is usable by the other functions of Jimlab. It is essential for images which hasn't been imported in Scilab with <function>jimread</function>().
		    </para>
		    <para>
			The input image is converted in 8 bit unsigned integers (uint8) on 1, 3 or 4 layers. For the encodings handled by  <function>Matplot</function>(), the converion used is the same as in the native function. 
		    </para>
		    <para>
			This function is used with its default values by all the functions of Jimlab. If the input image is indexed or with binary encoding "rgb332", "rgb444", "rgb555", "rgba5551" or "argb####", <function>jimstandard</function>() must be used before any other function.
		    </para>
		</refsection>
		<refsection>
		    <title>Examples</title>
        <programlisting role="example"><![CDATA[ 
//indexed image

//Creation of the colormap
f = gcf();
nc = size(f.color_map,1);
colormap = f.color_map;
//Creation of a random indexed image
indMat = grand(10,10,"uin",1,nc);
//Application of jimstandard()
usableMat = jimstandard(indMat, f);
usableMat2 = jimstandard(indMat, colormap);
type(usableMat(1,1,1))
type(usableMat2(1,1,1))
//Display
subplot(2,1,1); Matplot(indMat)
e = gce();
e.image_type = "index";
subplot(2,1,2); Matplot(usableMat)
 ]]></programlisting>
 
	<programlisting role="example"><![CDATA[ 
//input image with binary encoding "rgb332"

//Creation of a random image
rgb332Mat = int8(grand(10, 10,"uin", -128, 127));
//Application of jimstandard()
usableMat = jimstandard(rgb332Mat, "332");
type(usableMat(1,1,1))
//Display
subplot(2,1,1); Matplot(rgb332Mat)
e = gce();
e.image_type = "rgb332";
subplot(2,1,2); Matplot(usableMat)
 ]]></programlisting>
 
 	<programlisting role="example"><![CDATA[ 
//input image with binary encoding "rgba5551"

//Creation of a random image
rgba5551Mat = int16(grand(10, 10, "uin", -32768, 32767));
//Application of jimstandard()
usableMat = jimstandard(rgba5551Mat, "5551");
type(usableMat(1,1,1))
//Display
subplot(2,1,1); Matplot(rgba5551Mat)
e = gce();
e.image_type = "rgba5551";
subplot(2,1,2); Matplot(usableMat)
 ]]></programlisting>
 
  	<programlisting role="example"><![CDATA[ 
//input image with binary encoding "argb8888"

//Creation of a ransom image
argbMat = rand(10, 10, 4);
//Application of jimstandard()
usableMat = jimstandard(argbMat, %t);
type(usableMat(1,1,1))
//Display
subplot(2,1,1); Matplot(argbMat)
e = gce();
e.image_type = "argb";
subplot(2,1,2); Matplot(usableMat)
 ]]></programlisting>
	</refsection>
    <refsection role="see also">
        <title>See Also</title>
        <simplelist type="inline">
	    <member>
                <link linkend="Matplot_properties">Matplot_properties</link>
            </member>
	    <member>
                <link linkend="gcf">gcf</link>
            </member>
	    <member>
                <link linkend="jimwrite">jimwrite</link>
            </member>
        </simplelist>
    </refsection>
    <refsection>
        <title>History</title>
        <revhistory>
            <revision>
                <revnumber>0.1 - 2017-06</revnumber>
                <revremark>First release of Jimlab</revremark>
            </revision>
        </revhistory>
    </refsection>
</refentry>
